name: biom-format CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: flake8
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: install dependencies
      run: python -m pip install --upgrade pip
    - name: lint
      run: |
        pip install -q flake8
        flake8 biom setup.py

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.6
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda create --yes -n env_name python=3.6
        conda activate env_name
        conda install --name env_name pip click numpy "scipy>=1.3.1" pep8 flake8 coverage future six "pandas>=0.20.0" nose h5py>=2.2.0 cython scikit-bio
        pip install sphinx==1.2.2 "docutils<0.14"
        pip install -e . --no-deps
    - name: Build docs
      shell: bash -l {0}
      run: |
        conda activate env_name
        make -C doc html

  build:
    strategy:
      matrix:
        python-version: [3.6, ] # 3.7, 3.8]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda create --yes -n env_name python=${{ matrix.python-version }}
        conda activate env_name
        conda install -y pip click numpy "scipy>=1.3.1" pep8 flake8 coverage future six "pandas>=0.20.0" nose h5py>=2.2.0 cython scikit-bio
        pip install anndata

    - name: Tests
      shell: bash -l {0}
      run: |
        conda activate env_name
        conda install -y pytest
        which python
        pip install -e . --no-deps
        make test
        biom show-install-info
        for table in examples/*hdf5.biom; do echo ${table}; biom validate-table -i ${table}; done
        for table in examples/*table.biom; do echo ${table}; biom validate-table -i ${table}; done;
        python biom/assets/exercise_api.py examples/rich_sparse_otu_table_hdf5.biom sample
        python biom/assets/exercise_api.py examples/rich_sparse_otu_table_hdf5.biom observation
        sh biom/assets/exercise_cli.sh
